Java Spring Boot Core
- Java Spring, Spring Boot, Maven, Inversion of Control, Dependency injection, Java anotácie, Spring Bean

Java Spring Boot REST API
- REST API, JSON, Hibernate/JPA API, Entity Class, Data Binding,
- REST CRUD, Controller, Service, DAO, Postman, Validácia dát,
- Spring Data JPA, Spring Data REST

Java Spring Boot MVC
- Spring MVC, Thymeleaf, Spring MVC CRUD, Validácia dát,
- ORM mapovanie, Zabezpečenie, Komplexná Spring Boot MVC aplikácia

Semestrálny projekt
- na záver: prezentácia projektu pred vyučujúcim s kontrolnými otázkami

# Lesson 1

Vývoj webových aplikácií v Jave

Minulost Webu - servlety a JSP (JavaServer Pages)

Java Spring - open source framework pre vývoj webových aplikácií / alternativa  Java EE

Zahŕňa technológie ako:
• Aspect-oriented programming (AOP)
• Dependency injection (DI)
• Plain Old Java Object (POJO)

Spring Boot ( automatickú konfiguráciu )
    - Spring Boot nám uľahčí začiatok vo vývoji Spring-ovských webových aplikácií
    - zabudovaný webový server (Tomcat)
    -  pomáha riešiť konflikty dependencies pomocou Maven alebo Gradle

Maven - buildovanie a manažovanie (hlavne) Javovských projektov
    -  povieme Maven-u, ktoré dependencies budeme využívať na základe POM.xml
    -  Maven stiahne za nás potrebné JAR súbory a sprístupní tieto JAR súbory počas kompilácie

Anotacia - @SpringBootApplication ( poskytujú doplňujúce informácie o kóde. )

Primárne funkcie Spring kontajnera:
    - vytvárať a spravovať objekty (Inversion of Control)
    - “vkladanie závislostí objektom“ (Dependency Injection)

Inversion of Control (IoC):
    - princíp v softvérovom inžinierstve, ktorý prenáša kontrolu nad
      objektami alebo časťami programu do kontajnera alebo
      frameworku
    - IoC môžeme dosiahnuť prostredníctvom rôznych mechanizmov:
      • návrhový vzor Strategy, Service locator, Factory

Dependency injection (DI):
    - ide o mechanizmus, kedy je do našej triedy vložená (injektovaná)
      inštancia inej triedy
    - pre prehľadnosť a väčšiu flexibilitu je dobré mať oddelenú
      konfiguráciu od implementácie

Konfigurácia Spring kontajnera:
    -  existujú 3 prístupy, ako konfigurovať Spring-ovský kontajner:
      • pomocou XML súboru (používané najmä v minulosti)
      • cez Java anotácie (moderný prístup)
      • cez Javovský zdrojový kód (moderný prístup)

Čo je to Spring Bean? - Javovský objekt (inštancia triedy)
  
Typy dependency injections:
	- Constructor injection
	- Setter injection
	- Field injection (používa sa menej)

@Autowired: Označuje, že Spring má automaticky
injektovať závislosti cez tento konštruktor.















